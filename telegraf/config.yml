name: Telegraf add-on
version: "1.0.22"
slug: hassio_telegraf
description: Telegraf open source data collector
url: "https://github.com/jnull/hassio-addons/tree/main/telegraf"
arch:
  - armhf
  - armv7
  - aarch64
  - amd64
  - i386
image: ghcr.io/jnull/{arch}-telegraf
init: false
startup: services
boot: manual
hassio_api: true
#hassio_role: default
auth_api: true
docker_api: true
host_network: true
#apparmor: true
map:
  - config:rw
  - ssl:rw
  - addons:rw
  - backup:rw
  - share:rw
privileged:
  - SYS_ADMIN
full_access: true
options:
  custom_conf:
    enabled: false
    location: /config/telegraf/telegraf.conf
  hostname: test
  influxDB:
    enabled: true
    url: http://a0d7b954-influxdb:8086
    username: telegraf
    password: password
    db: telegraf
    retention_policy: autogen
  kernel:
    enabled: false
  swap:
    enabled: false
  docker:
    enabled: false
    timeout: 5s
  thermal:
    enabled: false
  smart_monitor:
    enabled: false
    timeout: 30s
  ipmi_sensor:
    enabled: false
    interval: 30s
    timeout: 20s
    server_user_id: user
    server_password: password
    server_protocol: lan
    server_ip: 192.168.1.2
  influxDBv2:
    enabled: false
    url: http://127.0.0.1:9999
    organization: ""
    token: ""
    bucket: ""
  prometheus:
    enabled: false
    metrics_path: /metrics
  collectd:
    enabled: true
    port: "25826"
    auth_file: "/share/auth_file"
    security_level: "none"
    types_db: "/etc/telegraf/types.db"
schema:
  custom_conf:
    enabled: bool
    location: str
  hostname: str
  influxDB:
    enabled: bool
    url: str
    db: str
    retention_policy: str?
    username: str?
    password: str?
  kernel:
    enabled: bool
  swap:
    enabled: bool
  docker:
    enabled: bool
    timeout: str
  thermal:
    enabled: bool
  smart_monitor:
    enabled: bool
    timeout: str
  ipmi_sensor:
    enabled: bool
    interval: str
    timeout: str
    server_user_id: str
    server_password: str
    server_protocol: str
    server_ip: str
  influxDBv2:
    enabled: bool
    url: str
    organization: str
    token: str
    bucket: str
  prometheus:
    enabled: bool
    metrics_path: str
  collectd:
    enabled: bool
    port: int
    auth_file: str
    security_level: str
    types_db: str
ports:
  9273/tcp: 9273
  25826/udp: 25826
ports_description:
  9273/tcp: Prometheus Client
  25826/udp: Collectd Server
